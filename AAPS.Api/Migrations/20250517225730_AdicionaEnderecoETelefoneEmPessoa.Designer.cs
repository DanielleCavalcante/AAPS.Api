// <auto-generated />
using System;
using AAPS.Api.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AAPS.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250517225730_AdicionaEnderecoETelefoneEmPessoa")]
    partial class AdicionaEnderecoETelefoneEmPessoa
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AAPS.Api.Models.Acompanhamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("date");

                    b.Property<int>("EventoId")
                        .HasColumnType("int");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(600)");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("EventoId");

                    b.ToTable("Acompanhamentos", "dbo");
                });

            modelBuilder.Entity("AAPS.Api.Models.Adocao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AdotanteId")
                        .HasColumnType("int");

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<bool>("Cancelada")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Data")
                        .HasColumnType("date");

                    b.Property<int>("PontoAdocaoId")
                        .HasColumnType("int");

                    b.Property<int>("VoluntarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdotanteId");

                    b.HasIndex("AnimalId");

                    b.HasIndex("PontoAdocaoId");

                    b.HasIndex("VoluntarioId");

                    b.ToTable("Adocoes", "dbo");
                });

            modelBuilder.Entity("AAPS.Api.Models.Adotante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Bloqueio")
                        .HasColumnType("int");

                    b.Property<string>("Facebook")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Instagram")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("LocalTrabalho")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("PessoaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PessoaId")
                        .IsUnique();

                    b.ToTable("Adotantes", "dbo");
                });

            modelBuilder.Entity("AAPS.Api.Models.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("date");

                    b.Property<int>("Disponibilidade")
                        .HasColumnType("int");

                    b.Property<string>("Especie")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Pelagem")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("PessoaId")
                        .HasColumnType("int");

                    b.Property<string>("Raca")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("Resgatado")
                        .HasColumnType("bit");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PessoaId");

                    b.ToTable("Animais", "dbo");
                });

            modelBuilder.Entity("AAPS.Api.Models.Evento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Eventos", "dbo");
                });

            modelBuilder.Entity("AAPS.Api.Models.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Contato1")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Contato2")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<int?>("PontoAdocaoId")
                        .HasColumnType("int");

                    b.Property<string>("Rg")
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("SituacaoEndereco")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnType("char(2)");

                    b.HasKey("Id");

                    b.HasIndex("PontoAdocaoId");

                    b.ToTable("Pessoas", "dbo");
                });

            modelBuilder.Entity("AAPS.Api.Models.PontoAdocao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Contato1")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Contato2")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Responsavel")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnType("char(2)");

                    b.HasKey("Id");

                    b.ToTable("PontosAdocao", "dbo");
                });

            modelBuilder.Entity("AAPS.Api.Models.Voluntario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PessoaId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("PessoaId")
                        .IsUnique();

                    b.ToTable("Voluntarios", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("AAPS.Api.Models.Acompanhamento", b =>
                {
                    b.HasOne("AAPS.Api.Models.Animal", "Animal")
                        .WithMany("Acompanhamentos")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AAPS.Api.Models.Evento", "Evento")
                        .WithMany("Acompanhamentos")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("Evento");
                });

            modelBuilder.Entity("AAPS.Api.Models.Adocao", b =>
                {
                    b.HasOne("AAPS.Api.Models.Adotante", "Adotante")
                        .WithMany("Adocoes")
                        .HasForeignKey("AdotanteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AAPS.Api.Models.Animal", "Animal")
                        .WithMany("Adocoes")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AAPS.Api.Models.PontoAdocao", "PontoAdocao")
                        .WithMany("Adocoes")
                        .HasForeignKey("PontoAdocaoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AAPS.Api.Models.Voluntario", "Voluntario")
                        .WithMany("Adocoes")
                        .HasForeignKey("VoluntarioId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Adotante");

                    b.Navigation("Animal");

                    b.Navigation("PontoAdocao");

                    b.Navigation("Voluntario");
                });

            modelBuilder.Entity("AAPS.Api.Models.Adotante", b =>
                {
                    b.HasOne("AAPS.Api.Models.Pessoa", "Pessoa")
                        .WithOne("Adotante")
                        .HasForeignKey("AAPS.Api.Models.Adotante", "PessoaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("AAPS.Api.Models.Animal", b =>
                {
                    b.HasOne("AAPS.Api.Models.Pessoa", "Pessoa")
                        .WithMany("Animais")
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("AAPS.Api.Models.Pessoa", b =>
                {
                    b.HasOne("AAPS.Api.Models.PontoAdocao", "PontoAdocao")
                        .WithMany()
                        .HasForeignKey("PontoAdocaoId");

                    b.Navigation("PontoAdocao");
                });

            modelBuilder.Entity("AAPS.Api.Models.Voluntario", b =>
                {
                    b.HasOne("AAPS.Api.Models.Pessoa", "Pessoa")
                        .WithOne("Voluntario")
                        .HasForeignKey("AAPS.Api.Models.Voluntario", "PessoaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("AAPS.Api.Models.Voluntario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("AAPS.Api.Models.Voluntario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AAPS.Api.Models.Voluntario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("AAPS.Api.Models.Voluntario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AAPS.Api.Models.Adotante", b =>
                {
                    b.Navigation("Adocoes");
                });

            modelBuilder.Entity("AAPS.Api.Models.Animal", b =>
                {
                    b.Navigation("Acompanhamentos");

                    b.Navigation("Adocoes");
                });

            modelBuilder.Entity("AAPS.Api.Models.Evento", b =>
                {
                    b.Navigation("Acompanhamentos");
                });

            modelBuilder.Entity("AAPS.Api.Models.Pessoa", b =>
                {
                    b.Navigation("Adotante");

                    b.Navigation("Animais");

                    b.Navigation("Voluntario");
                });

            modelBuilder.Entity("AAPS.Api.Models.PontoAdocao", b =>
                {
                    b.Navigation("Adocoes");
                });

            modelBuilder.Entity("AAPS.Api.Models.Voluntario", b =>
                {
                    b.Navigation("Adocoes");
                });
#pragma warning restore 612, 618
        }
    }
}
